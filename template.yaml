Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 10

Resources:
  hashChallengeFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Zip
      CodeUri: ./hash
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      # PackageType: Image
      # Architectures:
      #   - x86_64
      Policies:
         # Give Create/Read/Update/Delete Permissions on the table
         # Todo: restrict to create only
         - DynamoDBCrudPolicy:
             TableName: !Ref hashChallengeTable
      Events:
        Create:
          Type: Api
          Properties:
            Path: /hash
            Method: POST
        Read:
          Type: Api
          Properties:
            Path: /hash/{challengeId}
            Method: GET
        Delete:
          Type: Api
          Properties:
            Path: /hash/{challengeId}
            Method: DELETE
      Environment:
        Variables:
          TABLE_NAME: !Ref hashChallengeTable
  decryptChallengeFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Zip
      CodeUri: ./decrypt
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      Events:
        Create:
          Type: Api
          Properties:
            Path: /decrypt
            Method: POST
        Read:
          Type: Api
          Properties:
            Path: /decrypt/{challengeId}
            Method: GET
        Delete:
          Type: Api
          Properties:
            Path: /decrypt/{challengeId}
            Method: DELETE
      Environment:
        Variables:
          TABLE_NAME: !Ref decryptChallengeTable
  hashChallengeTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: ChallengeId
        Type: Number
      TableName: ehb-hash-challenge
  decryptChallengeTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: ChallengeId
        Type: Number
      TableName: ehb-decrypt-challenge
      

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
